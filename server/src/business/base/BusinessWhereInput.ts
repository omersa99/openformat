/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountListRelationFilter } from "../../account/base/AccountListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { IntFilter } from "../../util/IntFilter";
import { ClientsAndSupplierListRelationFilter } from "../../clientsAndSupplier/base/ClientsAndSupplierListRelationFilter";
import { DocumentListRelationFilter } from "../../document/base/DocumentListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { ItemListRelationFilter } from "../../item/base/ItemListRelationFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { SettingWhereUniqueInput } from "../../setting/base/SettingWhereUniqueInput";

@InputType()
class BusinessWhereInput {
  @ApiProperty({
    required: false,
    type: () => AccountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AccountListRelationFilter)
  @IsOptional()
  @Field(() => AccountListRelationFilter, {
    nullable: true,
  })
  accounts?: AccountListRelationFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  bn?: IntFilter;

  @ApiProperty({
    required: false,
    type: () => ClientsAndSupplierListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ClientsAndSupplierListRelationFilter)
  @IsOptional()
  @Field(() => ClientsAndSupplierListRelationFilter, {
    nullable: true,
  })
  clientsAndSuppliers?: ClientsAndSupplierListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DocumentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DocumentListRelationFilter)
  @IsOptional()
  @Field(() => DocumentListRelationFilter, {
    nullable: true,
  })
  documents?: DocumentListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ItemListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ItemListRelationFilter)
  @IsOptional()
  @Field(() => ItemListRelationFilter, {
    nullable: true,
  })
  items?: ItemListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  owner?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SettingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SettingWhereUniqueInput)
  @IsOptional()
  @Field(() => SettingWhereUniqueInput, {
    nullable: true,
  })
  settings?: SettingWhereUniqueInput;
}

export { BusinessWhereInput as BusinessWhereInput };
