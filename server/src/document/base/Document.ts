/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Business } from "../../business/base/Business";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsInt,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { ClientsAndSupplier } from "../../clientsAndSupplier/base/ClientsAndSupplier";
import { DocumentDetail } from "../../documentDetail/base/DocumentDetail";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { ReceiptDetail } from "../../receiptDetail/base/ReceiptDetail";

@ObjectType()
class Document {
  @ApiProperty({
    required: false,
    type: () => Business,
  })
  @ValidateNested()
  @Type(() => Business)
  @IsOptional()
  business?: Business | null;

  @ApiProperty({
    required: false,
    type: () => ClientsAndSupplier,
  })
  @ValidateNested()
  @Type(() => ClientsAndSupplier)
  @IsOptional()
  clientSupplier?: ClientsAndSupplier | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [DocumentDetail],
  })
  @ValidateNested()
  @Type(() => DocumentDetail)
  @IsOptional()
  documentDetails?: Array<DocumentDetail>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  documentType!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fds!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  linkedDocumentIDs!: JsonValue;

  @ApiProperty({
    required: false,
    type: () => [ReceiptDetail],
  })
  @ValidateNested()
  @Type(() => ReceiptDetail)
  @IsOptional()
  receiptDetails?: Array<ReceiptDetail>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Document as Document };
