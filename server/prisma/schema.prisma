datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  businesses Business?
  createdAt  DateTime  @default(now())
  firstName  String?
  id         String    @id @default(cuid())
  lastName   String?
  password   String
  roles      Json
  updatedAt  DateTime  @updatedAt
  username   String    @unique
}

model Business {
  accounts   Account[]
  createdAt  DateTime   @default(now())
  documents  Document[]
  id         String     @id @default(cuid())
  owner      User?      @relation(fields: [ownerId], references: [id])
  ownerId    String?    @unique
  settings   Setting?   @relation(fields: [settingsId], references: [id])
  settingsId String?    @unique
  updatedAt  DateTime   @updatedAt
}

model Account {
  accountantClassificationCode    Int?
  accountBalanceAtStartOfSegment  Int?
  accountBalanceInForeignCurrency Int?
  accountKey                      String?
  accountName                     String?
  business                        Business?     @relation(fields: [businessId], references: [id])
  businessId                      String?
  centerAccount                   String?
  createdAt                       DateTime      @default(now())
  currencyCodeForForeignCurrency  String?
  examinedBalanceCode             String?
  examinedBalanceCodeDescription  String?
  id                              String        @id @default(cuid())
  totalCredit                     Int?
  totalDebit                      Int?
  transaction                     Transaction[]
  updatedAt                       DateTime      @updatedAt
}

model Transaction {
  accountInTransaction    Account?  @relation(fields: [accountInTransactionId], references: [id])
  accountInTransactionId  String?
  actionAmount            Int?
  actionIndicator         Int?
  actionOperation         String?
  counterAccount          String?
  createdAt               DateTime  @default(now())
  data                    Json?
  date                    DateTime?
  details                 String?
  entryDate               DateTime?
  foreignCurrencyAmount   Int?
  foreignCurrencyCode     String?
  id                      String    @id @default(cuid())
  lineNumberInTransaction Int?
  matchingField_1         String?
  matchingField_2         String?
  modifiedDate            DateTime?
  portion                 Int?
  reference               String?
  reference_2             String?
  referenceDocumentType   Int?
  referenceDocumentType_2 Int?
  transactionNumber       Int?
  transactionType         String?
  updatedAt               DateTime  @updatedAt
}

model Document {
  business         Business?           @relation(fields: [businessId], references: [id])
  businessId       String?
  clientSupplier   ClientsAndSupplier? @relation(fields: [clientSupplierId], references: [id])
  clientSupplierId String?
  createdAt        DateTime            @default(now())
  documentDetails  DocumentDetail[]
  id               String              @id @default(cuid())
  receiptDetails   ReceiptDetail[]
  updatedAt        DateTime            @updatedAt
}

model Item {
  createdAt                             DateTime @default(now())
  data                                  Json?
  id                                    String   @id @default(cuid())
  internalItemCode                      String?
  itemName                              String?
  sortingCode                           String?
  sortingCodeDescription                String?
  supplierManufacturerCodeInProcurement String?
  unitOfMeasurementDescription          String?
  universalItemCode                     String?
  updatedAt                             DateTime @updatedAt
}

model ClientsAndSupplier {
  addressCity        String?
  addressCountry     String?
  addressHouseNumber String?
  addressPostalCode  String?
  addressStreet      String?
  businessNumber     String?
  countryCode        String?
  createdAt          DateTime   @default(now())
  documents          Document[]
  id                 String     @id @default(cuid())
  updatedAt          DateTime   @updatedAt
}

model ItemTransaction {
  createdAt        DateTime @default(now())
  id               String   @id @default(cuid())
  inflows          Int?
  internalItemCode String?
  outflows         Int?
  updatedAt        DateTime @updatedAt
}

model DocumentDetail {
  createdAt  DateTime  @default(now())
  document   Document? @relation(fields: [documentId], references: [id])
  documentId String?
  id         String    @id @default(cuid())
  updatedAt  DateTime  @updatedAt
}

model ReceiptDetail {
  createdAt  DateTime  @default(now())
  document   Document? @relation(fields: [documentId], references: [id])
  documentId String?
  id         String    @id @default(cuid())
  updatedAt  DateTime  @updatedAt
}

model Setting {
  accountingSettings Json?
  business           Business?
  businessSettings   Json?
  createdAt          DateTime  @default(now())
  id                 String    @id @default(cuid())
  updatedAt          DateTime  @updatedAt
}
