datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  businesses Business?
  createdAt  DateTime  @default(now())
  firstName  String?
  id         String    @id @default(cuid())
  lastName   String?
  password   String
  roles      Json
  updatedAt  DateTime  @updatedAt
  username   String    @unique
}

model Business {
  accounts            Account[]
  bn                  Int                  @unique
  clientsAndSuppliers ClientsAndSupplier[]
  createdAt           DateTime             @default(now())
  documents           Document[]
  id                  String               @id @default(cuid())
  items               Item[]
  owner               User?                @relation(fields: [ownerId], references: [id])
  ownerId             String?              @unique
  settings            Setting?             @relation(fields: [settingsId], references: [id])
  settingsId          String?              @unique
  updatedAt           DateTime             @updatedAt
}

model Account {
  accountantClassificationCode    Int?
  accountBalanceAtStartOfSegment  Int?
  accountBalanceInForeignCurrency Int?
  accountKey                      String?
  accountName                     String?
  business                        Business?           @relation(fields: [businessId], references: [id])
  businessId                      String?
  centerAccount                   String?
  clientsAndSuppliers             ClientsAndSupplier? @relation(fields: [clientsAndSuppliersId], references: [id])
  clientsAndSuppliersId           String?             @unique
  createdAt                       DateTime            @default(now())
  currencyCodeForForeignCurrency  String?
  examinedBalanceCode             String?
  examinedBalanceCodeDescription  String?
  id                              String              @id @default(cuid())
  totalCredit                     Int?
  totalDebit                      Int?
  transaction                     Transaction[]
  updatedAt                       DateTime            @updatedAt
}

model Transaction {
  accountInTransaction    Account?        @relation(fields: [accountInTransactionId], references: [id])
  accountInTransactionId  String?
  actionAmount            Int?
  actionIndicator         Int?
  actionOperation         String?
  counterAccount          String?
  createdAt               DateTime        @default(now())
  data                    Json?
  date                    DateTime?
  details                 String?
  documentDetail          DocumentDetail? @relation(fields: [documentDetailId], references: [id])
  documentDetailId        String?
  entryDate               DateTime?
  foreignCurrencyAmount   Int?
  foreignCurrencyCode     String?
  id                      String          @id @default(cuid())
  lineNumberInTransaction Int?
  modifiedDate            DateTime?
  portion                 Int?
  receiptDetail           ReceiptDetail?  @relation(fields: [receiptDetailId], references: [id])
  receiptDetailId         String?
  reference               String?
  reference_2             String?
  transactionNumber       Int?
  transactionType         String?
  updatedAt               DateTime        @updatedAt
}

model Document {
  business               Business?           @relation(fields: [businessId], references: [id])
  businessId             String?
  canceledDocument       Boolean?
  clientSupplier         ClientsAndSupplier? @relation(fields: [clientSupplierId], references: [id])
  clientSupplierId       String?
  createdAt              DateTime            @default(now())
  documentDate           Int?
  documentDetails        DocumentDetail[]
  documentNumber         Int?
  documentProductionDate Int?
  documentType           Int?
  id                     String              @id @default(cuid())
  linkedDocumentIds      String?
  receiptDetails         ReceiptDetail[]
  updatedAt              DateTime            @updatedAt
}

model Item {
  business                              Business?        @relation(fields: [businessId], references: [id])
  businessId                            String?
  createdAt                             DateTime         @default(now())
  data                                  Json?
  documentDetails                       DocumentDetail[]
  id                                    String           @id @default(cuid())
  internalItemCode                      String?
  itemName                              String?
  openingBalance                        Int?
  sortingCode                           String?
  sortingCodeDescription                String?
  supplierManufacturerCodeInProcurement String?
  unitOfMeasurementDescription          String?
  universalItemCode                     String?
  updatedAt                             DateTime         @updatedAt
}

model ClientsAndSupplier {
  account            Account?
  addressCity        String?
  addressCountry     String?
  addressHouseNumber String?
  addressPostalCode  String?
  addressStreet      String?
  business           Business?  @relation(fields: [businessId], references: [id])
  businessId         String?
  businessNumber     String?
  countryCode        String?
  createdAt          DateTime   @default(now())
  documents          Document[]
  id                 String     @id @default(cuid())
  name               String?
  updatedAt          DateTime   @updatedAt
}

model ItemTransaction {
  createdAt        DateTime @default(now())
  id               String   @id @default(cuid())
  inflows          Int?
  internalItemCode String?
  outflows         Int?
  updatedAt        DateTime @updatedAt
}

model DocumentDetail {
  createdAt       DateTime      @default(now())
  document        Document      @relation(fields: [documentId], references: [id])
  documentId      String
  id              String        @id @default(cuid())
  item            Item?         @relation(fields: [itemId], references: [id])
  itemId          String?
  priceWithoutVat Int?
  quantity        Int?
  transactions    Transaction[]
  transactionType String?
  updatedAt       DateTime      @updatedAt
  vatRate         Int?
}

model ReceiptDetail {
  createdAt                 DateTime      @default(now())
  document                  Document      @relation(fields: [documentId], references: [id])
  documentId                String
  id                        String        @id @default(cuid())
  paymentCheckClearanceDate DateTime?
  paymentData               Json?
  paymentType               Int?
  total                     Decimal?
  transactions              Transaction[]
  updatedAt                 DateTime      @updatedAt
}

model Setting {
  accountingSettings Json?
  business           Business?
  businessSettings   Json?
  createdAt          DateTime  @default(now())
  id                 String    @id @default(cuid())
  updatedAt          DateTime  @updatedAt
}
